<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ajayumi.AiXin.App.Wpf;component/Themes/Default/SignIn.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ajayumi.AiXin.App.Wpf;component/Themes/Default/SignUp.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ajayumi.AiXin.App.Wpf;component/Themes/Default/Home.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ajayumi.AiXin.App.Wpf;component/Themes/Default/Chat.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ajayumi.AiXin.App.Wpf;component/Themes/Default/Contacts.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/ajayumi.AiXin.App.Wpf;component/Themes/Default/Search.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <FontFamily x:Key="DefaultFont">微软雅黑</FontFamily>
    <FontFamily x:Key="HeaderFontFamily">微软雅黑</FontFamily>
    <FontFamily x:Key="ContentFontFamily">微软雅黑</FontFamily>

    <System:Double x:Key="NormalFontSize">14</System:Double>
    <System:Double x:Key="ContentFontSize">14</System:Double>
    <System:Double x:Key="UpperCaseContentFontSize">14</System:Double>
    <System:Double x:Key="FloatingWatermarkFontSize">12</System:Double>

    <System:Double x:Key="FlatButtonFontSize">14</System:Double>

    <Thickness x:Key="GridRowMargin">0 0 0 5</Thickness>

    <Style x:Key="MetroFlatToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource BlackColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="DarkGray" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                <Setter Property="Background" Value="{DynamicResource FlatButtonPressedBackgroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>